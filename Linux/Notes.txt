Lecture-1:

What happens when you start computer:
    1. First it executes the software in Bios (Basic Input Output System), it jobs is to check the system is working correctly or not. For example it checks that memory is loaded or not , how many drivers are there, 
    2. Secondly it loades bootloader which intialize the the OS

What is OS?

An operating system (OS) is a software that manages and controls the computer hardware and provides an environment for running applications and executing user programs. It acts as an intermediary between the computer hardware and software applications.

OS is simply a software , but must have this feature
    1.Kernel: It is the core of any OS. It has control over anything in system. It basically bridge between hardware and software.  
    2.File System : It is a method or Data stucture that the OS used in order to store and retriver data in the memory.
    3.User Interface(CLI,GUI)
    4.Manipulate data based oh commands

Linux vs Windows

    1.  Open Source: Updates keeps comming on regular basis , so bugs fixed very fast as compare to Windows
    2.  Suppports almost all programming language
    3.  Linux terminal is superior than cmd 
    4.  Bash scripting




A shell is basically a command line interpreter, executes each command line by line , basically a program by which we can operate OS through commands. It uses Bash scripting

Unix is a powerful and widely used operating system developed in the 1970s at Bell Labs. It has had a significant influence on the development of modern operating systems and has served as the foundation for various Unix-like systems such as Linux and macOS.

What is terminal?
    A terminal refers to a program or a hardware device that provides an interface for users to interact with a computer system through a command-line interface (CLI)

Commands:
1. echo              : It is console.log of linux
2. pwd               : Tells location where are you 
3. ls                : List all dir of your current dir
4. cd                : to open particular dir
5. .                 : current dir
6. ..                : Parent dir
7. ~                 : Home dir
8. -                 : previous dir
9. #                 : Used to comment in terminal
10 mkdir             : to make new dir
11 touch             : to make new file
12 cat               : to concatenate and display the contents of files
13 rm                : to remove or delete file
14 Ctrl+C            : to enter a new line in terminal
15 cp                : to copy file from one location to another
16 mv                : to move file from one location to another
17 rmdir             : to remove dir
18 -r                : recurive remove all files in the dir and remove dir as well
19 -rv               : tells which it removes
20 man               : documentation
21 whatis            : self explanatory
22 Ctrl+R            : for reverse search
23 mkdir -p          : for creating folder inside folder if parent folder is not present or not created yet
24 find ~ -name (name): to find the absoulte path of (name) file
25 *                  : used for all types
26 find ~ -type  d -name  (name) : to find folder /d stands for dir
In Linux, a flag refers to a command-line option or parameter that modifies the behavior of a command or program. Flags are also known as options or switches.

Ex of cp and mv command
    cp ${file name} ${location}
    cp text.txt /linux_masterclass
    mv text.txt /linux_masterclass


Flags are used to customize the way a command or program operates by providing additional instructions or specifying particular settings. They are typically specified after the command name and preceded by a hyphen (-) or double hyphen (--).


1. -a       : show hidden files as well (list all)
    Ex: ls -a
2. -l       : to display detailed information of files
    Ex: ls -l
3. -p       : create directory if does not exist
    Ex: mkdir -p hello1/hello2
4. -r       : recurive
    Ex: rm -r linux_masterclass
5. -v       : I don't know the use but if use rm -rv linux_masterclass it tells  what it removes in order
Whichever dir starts with . in linux is hidden 

Double tab is also command to show dir which start with what you have typed
When we do ls ,all directory comes in blue color and files comes in white color
rmdir doesn't work if there is any file or directory inside it so what you can do is use rm -r hello1 , it remove recurive all the files inside the dir

---------------------------------------------------------------------------------

Lecture-2:

Linux has three standard stream, there job is to transfer data in the form of text in case of linux
Three types are:
    1. stdin(Standard input) (Code is 0)
    2. stdout(Standard output) (Code is 1)
    3. stderr(Standard error) (Code is 2)

Output can be given in any form such as 
    1. In the terminal
    2. In the form of file 
    3. Pipe-redirects


Some commands:

    1. >     : is used to save output in text file (in order to redirect your output)
        Ex: ls > output.txt
    2. >>    : to append the new output in the previous one
        Ex: ls >> output.txt
    3. 2>    : is used to save standard error in text file 
        Ex: lg 2> output.txt (if you use 2>> it will standard error);
    4. 2> /dev/null  : it's nullify error and won't show in terminal 
    5. head          : show only first 10 lines of file
        Ex: head ls /var/log/syslog 
    6. tail          : show only last 10 lines of file
        Ex: tail ls /var/log/syslog
    7. -n (no.of lines) : to show specified no . of lines
        Ex: tail -n 15 ls /var/log/syslog
    8. sort             : sort the text file according to alphabet
        Ex: sort output.txt
    9. -r               : this flag is used to sort in reverse order
        Ex: sort -r output.txt
    10. tr              : to translate a file 
        Ex: cat output.txt | tr a-z A-Z
    11. uniq            : same work as set 
        Ex: uniq output.txt
    12. uniq -c         : give occurances of items(if they are adjacent, means sorted)
        Ex: uniq -c output.txt
    13. uniq -u         : give only unique value
        Ex: uniq -u output.txt
    14. uniq -d         : give only value which are duplicate
        Ex: uniq -d output.txt
    15. wc              : word count  
        Ex: wc output.txt (give three value in output, no. of lines then word then size in terms of bytes)
    16. wc -l           : how many lines it has
        Ex: wc -l output.txt 
    17. wc-c            : size of file in terms of chac
        Ex: wc -c output.txt
    18. wc -w           : no. of words in file
        Ex: wc -w output.txt
    19. grep            : to search text in file (has many more use)

If we typed a wrong command then terminal give standard error instead of standard output

Pipe : It allows you to take standard output of one command as an standard input of another command.

Ex: ls -la /etc | less (This "|" symbol is known as pipe)

Enviornment Variables

Type echo $HOME in terminal , this gives output same as pwd


These Enviornment Variables contains useful infromation that is used by shell and other processors 
"env" is simple command by which we can see all our enviornment variables and their value

There is one enviornment variable named $PATH which have all path
just type ls /usr/bin | less (you will able to see all the files which are present in linux in order to run whenever you type any command in terminal it will look through this list)


-----------------------------------------------------------

Lecture-3: (User Management and permissions)

Every user have their home directory where user specific files are stored
The system has another set of id , uid which system used to identify User

There are so many user in linux OS

Most powerful user is root or superuser, it can access any file in the system or start and terminate any process.

sudo command give access to superuser (superuser do)
It's not the practice to access sudo, you may end up by deleting some important files in system

root:x:0:0:root:/root:/bin/bash
1   :2:3:4:5   :6    :7

1- username
2- password (stored in etc/shadow)
3- UserID, used by system to identify user
4- Group id
5- User Info
6- Home directory
7- shell

-------------------------------------------------------

root:!:19511:0:99999:7:::
1   :2:3    :4:5    :6:789

1- username
2- encryted password
3- Date of last pasword change (denotes the date , days since 1st jan 1970)
4- Minimum password age
5- Max passord age
6- Warning period for changing password
7- Password expiry period (How many days have been passed since my password has expired)
8- Account expiry date (On which date my account will expire)
9- Reserved Field

------------------------------

sudo cat /etc/group

root:x:0:
1   :2:3:4

1- Group Name
2- Group Password
3- Group Id(GID)
4- List of users (if there are multiple user in a group there name is seprated by comma)

------------------------------------------

sudo useradd aditya (Create another user with name aditya)
sudo userdel aditya (delete user)
sudo passwd (Username) (In order to change the password)
sudo hostname vaibhav1mahajan (for changing hostname which is shown in terminal)

------------------------------------------------------------------------------------------

Permissions

d/rwx/r-x/r-x (It has 10 permission bits)
1 2   3   4

1- This is type of data
    d = directory
    - = file
    l = link

2- User permission (symbolic representation u)

3- Group permission (symbolic representation g)

4- Other permission (symbolic representation o)

This is in order

    rwx- are symbolic representation
    r- readalbe (code is 4)
    w- writable (code is 2)
    x- executable (code is 1)
    -- empty  



Modify the permission

+ is used to add permission
- is used to remove permission

Command: chmod {u,o,g}{+,-}{r,w,e,-} {filename,directory}
    Ex: chmod o+r ouutput.txt
        chmod ogu+rwx output.txt

We have another method to do the same thing 
 Command : chmod +777 output.txt
        chmod +741 output.txt

To change the ownership of file 
Command: chown user_name output.txt

To change group 
    Command: chgrp group_name output.txt

To change both group and ownership
    Command: chown user_name:group_name output.txt

To change the default permission of file 
    Command: umask 777  
    There is catch here , umask subtract the value what we have given from 777 and the resultant we will the permission.






Commands:

1.sudo su                   : give access to superuser, your  history will not be saved if you are using this command

2. exit         : to go back to normal user

3. cat /etc/sudoers    : who can access the sudo command, we can delete ,add  some name as well

4. cat /etc/passwd  : list of all user


PAM : Pluggable Authentication Module


 



